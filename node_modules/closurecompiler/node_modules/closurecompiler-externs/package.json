{
  "name": "closurecompiler-externs",
  "version": "1.0.0",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode@dcode.io"
  },
  "description": "A collection of node.js externs for use with ClosureCompiler.js.",
  "contributors": [
    {
      "name": "Daniel Wirtz",
      "email": "dcode@dcode.io"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/dcodeIO/node.js-closure-compiler-externs.git"
  },
  "devDependencies": {
    "closurecompiler": ">=1.0.2"
  },
  "license": "Apache License, Version 2.0",
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "test": "node tests/validate.js"
  },
  "readme": "![node.js Closure Compiler externs](https://raw.github.com/dcodeIO/node.js-closure-compiler-externs/master/NodejsClosureCompilerExterns.png)\n================================\nA collection of node.js externs for use with [Closure Compiler](https://developers.google.com/closure/compiler/docs/overview)\n/ [ClosureCompiler.js](https://github.com/dcodeIO/ClosureCompiler.js).\n\nSee: [Advanced Compilation and Externs](https://developers.google.com/closure/compiler/docs/api-tutorial3) for details\n\n#### Naming convention ####\n\n* Externs for core components are all lower case\n* Externs for [non-core components](https://github.com/dcodeIO/node.js-closure-compiler-externs/tree/master/contrib) begin with an upper case character\n\n#### Node.js specific annotation ####\n\nIf an extern file refers to a module that's usually loaded through `var modulename = require(\"modulename\")`, a comment\nis added on top of the file. For example for the fs module:\n\n````javascript\n/**\n BEGIN_NODE_INCLUDE\n var fs = require('fs');\n END_NODE_INCLUDE\n */\n````\n\n**NOTE:** This comment on its own does nothing. But if you stick to the template, that is including the fs module exactly\nthe same way naming it also \"fs\", the compiler will know how to handle the module and its subcomponents. For example:\n\n```javascript\n// This is bad:\nvar EventEmitter = require(\"events\").EventEmitter;\n\n// This is good:\nvar events = require(\"events\");\nvar EventEmitter = events.EventEmitter;\n```\n\nIf a file requires a dependency, it is named in the `@fileoverview` declaration. You should then include the dependency\nin your compile step, too.\n\nTesting [![Build Status](https://travis-ci.org/dcodeIO/node.js-closure-compiler-externs.png?branch=master)](https://travis-ci.org/dcodeIO/node.js-closure-compiler-externs)\n-------\nExterns are automatically syntax-validated through a [ClosureCompiler.js](https://github.com/dcodeIO/ClosureCompiler.js)\ntest run. This does not imply that the extern is complete or does actually represent the underlying API (but it should).\n\nUsage with ClosureCompiler.js\n-----------------------------\n[ClosureCompiler.js](https://github.com/dcodeIO/ClosureCompiler.js) depends on an npm distribution of this repository.\nAs a result, specifiying `--externs=node` automatically includes all node.js specific externs in your compile step. If\nyou are using non-core modules, you may still need [additional externs](https://github.com/dcodeIO/ClosureCompiler.js#externs-for-advanced_optimizations)\nfor these.\n\nDownloads\n---------\n* [ZIP-Archive](https://github.com/dcodeIO/node.js-closure-compiler-externs/archive/master.zip)\n* [Tarball](https://github.com/dcodeIO/node.js-closure-compiler-externs/tarball/master)\n\nLicense\n-------\nApache License, Version 2.0 - http://www.apache.org/licenses/LICENSE-2.0.html\n\nThis repository is not officially supported by Google, Joyent or individual module authors. If the closure compiler \nlicense header is used in a file, it is just there so signal that it is ok to include it in official closure channels.\nAll rights belong to their respective owners.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dcodeIO/node.js-closure-compiler-externs/issues"
  },
  "homepage": "https://github.com/dcodeIO/node.js-closure-compiler-externs",
  "_id": "closurecompiler-externs@1.0.0",
  "dist": {
    "shasum": "37b1a058e343b76683aab29f5f9bdae65a4ff6f3"
  },
  "_from": "closurecompiler-externs@*",
  "_resolved": "https://registry.npmjs.org/closurecompiler-externs/-/closurecompiler-externs-1.0.0.tgz"
}
